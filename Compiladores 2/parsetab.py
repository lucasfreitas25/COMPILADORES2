
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGMENT BOOLEAN CLASS COLON DEF DIF DIVI DOUBLE ELSE EXTENDS FALSE ID IF IGUAL INT LCBRA LERDOUBLE LPAR LSBRA MAI MAIN MAI_IGUAL MEN MENOS MEN_IGUAL MUL NEG NEW NULL NUMBER POINT PRINT PUBLIC RCBRA RETURN RPAR RSBRA SEMICOLON STATIC STRING SUM THIS TRUE VIRGU VOID WHILE lengthPROG : PUBLIC CLASS ID LCBRA PUBLIC STATIC VOID MAIN LPAR STRING LSBRA RSBRA ID RPAR LCBRA CMDS RCBRA METODO RCBRAMETODO : PUBLIC STATIC TIPO ID LPAR PARAMS RPAR LCBRA CMDS RETURN EXPRESSAO SEMICOLON RCBRA\n              | emptyPARAMS : TIPO ID MAIS_PARAMS\n              | emptyMAIS_PARAMS : VIRGU PARAMS\n                   | emptyDC : VAR MAIS_CMDS\n          VAR : TIPO VARSVARS : ID MAIS_VARMAIS_VAR : VIRGU VARS\n                | emptyTIPO : DOUBLECMDS : CMD MAIS_CMDS\n            | CMD_COND CMDS\n            | DC\n            | emptyMAIS_CMDS : SEMICOLON CMDS\n                 CMD_COND : IF LPAR CONDICAO RPAR LCBRA CMDS RCBRA PFALSA\n           | WHILE LPAR CONDICAO RPAR LCBRA CMDS RCBRA\n           CMD : PRINT LPAR EXPRESSAO RPAR\n           | ID RESTO_IDENTPFALSA : ELSE LCBRA CMDS RCBRA \n              | emptyRESTO_IDENT : ASSIGMENT EXP_IDENT\n                   | LPAR LISTA_ARG RPARCONDICAO : EXPRESSAO IGUAL EXPRESSAO\n                | EXPRESSAO MEN EXPRESSAO\n                | EXPRESSAO MEN_IGUAL EXPRESSAO\n                | EXPRESSAO MAI EXPRESSAO\n                | EXPRESSAO MAI_IGUAL EXPRESSAO\n                | EXPRESSAO DIF EXPRESSAO\n                | NEG EXPRESSAOLISTA_ARG : ARGUMENTOS\n                 | emptyARGUMENTOS : ID MAIS_IDENTMAIS_IDENT : VIRGU ARGUMENTOS \n                  | emptyEXP_IDENT : EXPRESSAO\n                 | LERDOUBLE LPAR RPAREXPRESSAO : TERMO OUTROS_TERMOSTERMO : OP_UN FATOR MAIS_FATORESOP_UN : MENOS\n             | emptyFATOR : ID\n             | NUMBER\n             | LPAR EXPRESSAO RPAROUTROS_TERMOS : OP_AD TERMO OUTROS_TERMOS\n                     | emptyOP_AD : SUM\n             | MENOSMAIS_FATORES : OP_MUL FATOR MAIS_FATORES\n                    | emptyOP_MUL : MUL\n              | DIVIempty :'
    
_lr_action_items = {'PUBLIC':([0,5,32,],[2,6,53,]),'$end':([1,80,],[0,-1,]),'CLASS':([2,],[3,]),'ID':([3,13,16,20,27,28,30,31,34,36,37,38,46,47,48,60,63,67,69,70,74,77,83,84,85,86,87,88,95,97,98,101,102,109,118,119,120,123,125,128,132,136,137,],[4,14,17,17,41,-13,-56,52,17,-56,-56,-56,72,-43,-44,-56,41,-56,-50,-51,-56,52,-56,-56,-56,-56,-56,-56,72,-54,-55,113,17,17,-56,-20,126,-19,-24,17,17,-23,-56,]),'LCBRA':([4,15,82,90,124,127,],[5,16,102,109,128,132,]),'STATIC':([6,53,],[7,79,]),'VOID':([7,],[8,]),'MAIN':([8,],[9,]),'LPAR':([9,17,23,24,25,30,36,37,38,44,46,47,48,60,67,69,70,74,83,84,85,86,87,88,95,97,98,113,137,],[10,31,36,37,38,-56,-56,-56,-56,65,74,-43,-44,-56,-56,-50,-51,-56,-56,-56,-56,-56,-56,-56,74,-54,-55,117,-56,]),'STRING':([10,],[11,]),'LSBRA':([11,],[12,]),'RSBRA':([12,],[13,]),'RPAR':([14,31,45,49,50,51,52,57,58,61,65,66,68,71,72,73,76,78,89,93,94,96,99,100,103,104,105,106,107,108,110,111,112,116,117,121,122,126,129,130,131,134,],[15,-56,-56,75,-34,-35,-56,81,82,90,92,-41,-49,-56,-45,-46,-36,-38,-33,-56,-42,-53,112,-37,-27,-28,-29,-30,-31,-32,-48,-56,-47,-52,-56,127,-5,-56,-4,-56,-7,-6,]),'PRINT':([16,20,34,102,109,118,119,123,125,128,132,136,],[23,23,23,23,23,-56,-20,-19,-24,23,23,-23,]),'IF':([16,20,34,102,109,118,119,123,125,128,132,136,],[24,24,24,24,24,-56,-20,-19,-24,24,24,-23,]),'WHILE':([16,20,34,102,109,118,119,123,125,128,132,136,],[25,25,25,25,25,-56,-20,-19,-24,25,25,-23,]),'RCBRA':([16,18,20,21,22,32,33,34,35,39,54,55,56,102,109,114,115,118,119,123,125,128,133,136,139,140,],[-56,32,-56,-16,-17,-56,-14,-56,-15,-8,80,-3,-18,-56,-56,118,119,-56,-20,-19,-24,-56,136,-23,140,-2,]),'DOUBLE':([16,20,34,79,102,109,117,118,119,123,125,128,130,132,136,],[28,28,28,28,28,28,28,-56,-20,-19,-24,28,28,28,-23,]),'ASSIGMENT':([17,],[30,]),'SEMICOLON':([19,26,29,40,41,42,43,45,62,64,66,68,71,72,73,75,81,91,92,93,94,96,110,111,112,116,138,],[34,34,-22,-9,-56,-25,-39,-56,-10,-12,-41,-49,-56,-45,-46,-26,-21,-11,-40,-56,-42,-53,-48,-56,-47,-52,139,]),'RETURN':([20,21,22,33,34,35,39,56,118,119,123,125,132,135,136,],[-56,-16,-17,-14,-56,-15,-8,-18,-56,-20,-19,-24,-56,137,-23,]),'LERDOUBLE':([30,],[44,]),'MENOS':([30,36,37,38,45,60,67,69,70,71,72,73,74,83,84,85,86,87,88,93,94,96,111,112,116,137,],[47,47,47,47,70,47,47,-50,-51,-56,-45,-46,47,47,47,47,47,47,47,70,-42,-53,-56,-47,-52,47,]),'NUMBER':([30,36,37,38,46,47,48,60,67,69,70,74,83,84,85,86,87,88,95,97,98,137,],[-56,-56,-56,-56,73,-43,-44,-56,-56,-50,-51,-56,-56,-56,-56,-56,-56,-56,73,-54,-55,-56,]),'NEG':([37,38,],[60,60,]),'VIRGU':([41,52,126,],[63,77,130,]),'SUM':([45,71,72,73,93,94,96,111,112,116,],[69,-56,-45,-46,69,-42,-53,-56,-47,-52,]),'IGUAL':([45,59,66,68,71,72,73,93,94,96,110,111,112,116,],[-56,83,-41,-49,-56,-45,-46,-56,-42,-53,-48,-56,-47,-52,]),'MEN':([45,59,66,68,71,72,73,93,94,96,110,111,112,116,],[-56,84,-41,-49,-56,-45,-46,-56,-42,-53,-48,-56,-47,-52,]),'MEN_IGUAL':([45,59,66,68,71,72,73,93,94,96,110,111,112,116,],[-56,85,-41,-49,-56,-45,-46,-56,-42,-53,-48,-56,-47,-52,]),'MAI':([45,59,66,68,71,72,73,93,94,96,110,111,112,116,],[-56,86,-41,-49,-56,-45,-46,-56,-42,-53,-48,-56,-47,-52,]),'MAI_IGUAL':([45,59,66,68,71,72,73,93,94,96,110,111,112,116,],[-56,87,-41,-49,-56,-45,-46,-56,-42,-53,-48,-56,-47,-52,]),'DIF':([45,59,66,68,71,72,73,93,94,96,110,111,112,116,],[-56,88,-41,-49,-56,-45,-46,-56,-42,-53,-48,-56,-47,-52,]),'MUL':([71,72,73,111,112,],[97,-45,-46,97,-47,]),'DIVI':([71,72,73,111,112,],[98,-45,-46,98,-47,]),'ELSE':([118,],[124,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROG':([0,],[1,]),'CMDS':([16,20,34,102,109,128,132,],[18,35,56,114,115,133,135,]),'CMD':([16,20,34,102,109,128,132,],[19,19,19,19,19,19,19,]),'CMD_COND':([16,20,34,102,109,128,132,],[20,20,20,20,20,20,20,]),'DC':([16,20,34,102,109,128,132,],[21,21,21,21,21,21,21,]),'empty':([16,20,30,31,32,34,36,37,38,41,45,52,60,67,71,74,83,84,85,86,87,88,93,102,109,111,117,118,126,128,130,132,137,],[22,22,48,51,55,22,48,48,48,64,68,78,48,48,96,48,48,48,48,48,48,48,68,22,22,96,122,125,131,22,122,22,48,]),'VAR':([16,20,34,102,109,128,132,],[26,26,26,26,26,26,26,]),'TIPO':([16,20,34,79,102,109,117,128,130,132,],[27,27,27,101,27,27,120,27,120,27,]),'RESTO_IDENT':([17,],[29,]),'MAIS_CMDS':([19,26,],[33,39,]),'VARS':([27,63,],[40,91,]),'EXP_IDENT':([30,],[42,]),'EXPRESSAO':([30,36,37,38,60,74,83,84,85,86,87,88,137,],[43,57,59,59,89,99,103,104,105,106,107,108,138,]),'TERMO':([30,36,37,38,60,67,74,83,84,85,86,87,88,137,],[45,45,45,45,45,93,45,45,45,45,45,45,45,45,]),'OP_UN':([30,36,37,38,60,67,74,83,84,85,86,87,88,137,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'LISTA_ARG':([31,],[49,]),'ARGUMENTOS':([31,77,],[50,100,]),'METODO':([32,],[54,]),'CONDICAO':([37,38,],[58,61,]),'MAIS_VAR':([41,],[62,]),'OUTROS_TERMOS':([45,93,],[66,110,]),'OP_AD':([45,93,],[67,67,]),'FATOR':([46,95,],[71,111,]),'MAIS_IDENT':([52,],[76,]),'MAIS_FATORES':([71,111,],[94,116,]),'OP_MUL':([71,111,],[95,95,]),'PARAMS':([117,130,],[121,134,]),'PFALSA':([118,],[123,]),'MAIS_PARAMS':([126,],[129,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROG","S'",1,None,None,None),
  ('PROG -> PUBLIC CLASS ID LCBRA PUBLIC STATIC VOID MAIN LPAR STRING LSBRA RSBRA ID RPAR LCBRA CMDS RCBRA METODO RCBRA','PROG',19,'p_prog','sintatico.py',16),
  ('METODO -> PUBLIC STATIC TIPO ID LPAR PARAMS RPAR LCBRA CMDS RETURN EXPRESSAO SEMICOLON RCBRA','METODO',13,'p_metodo','sintatico.py',20),
  ('METODO -> empty','METODO',1,'p_metodo','sintatico.py',21),
  ('PARAMS -> TIPO ID MAIS_PARAMS','PARAMS',3,'p_params','sintatico.py',29),
  ('PARAMS -> empty','PARAMS',1,'p_params','sintatico.py',30),
  ('MAIS_PARAMS -> VIRGU PARAMS','MAIS_PARAMS',2,'p_mais_params','sintatico.py',37),
  ('MAIS_PARAMS -> empty','MAIS_PARAMS',1,'p_mais_params','sintatico.py',38),
  ('DC -> VAR MAIS_CMDS','DC',2,'p_dc','sintatico.py',45),
  ('VAR -> TIPO VARS','VAR',2,'p_var','sintatico.py',53),
  ('VARS -> ID MAIS_VAR','VARS',2,'p_vars','sintatico.py',57),
  ('MAIS_VAR -> VIRGU VARS','MAIS_VAR',2,'p_mais_var','sintatico.py',61),
  ('MAIS_VAR -> empty','MAIS_VAR',1,'p_mais_var','sintatico.py',62),
  ('TIPO -> DOUBLE','TIPO',1,'p_tipo','sintatico.py',70),
  ('CMDS -> CMD MAIS_CMDS','CMDS',2,'p_cmds','sintatico.py',76),
  ('CMDS -> CMD_COND CMDS','CMDS',2,'p_cmds','sintatico.py',77),
  ('CMDS -> DC','CMDS',1,'p_cmds','sintatico.py',78),
  ('CMDS -> empty','CMDS',1,'p_cmds','sintatico.py',79),
  ('MAIS_CMDS -> SEMICOLON CMDS','MAIS_CMDS',2,'p_mais_cmds','sintatico.py',86),
  ('CMD_COND -> IF LPAR CONDICAO RPAR LCBRA CMDS RCBRA PFALSA','CMD_COND',8,'p_cmd_cond','sintatico.py',94),
  ('CMD_COND -> WHILE LPAR CONDICAO RPAR LCBRA CMDS RCBRA','CMD_COND',7,'p_cmd_cond','sintatico.py',95),
  ('CMD -> PRINT LPAR EXPRESSAO RPAR','CMD',4,'p_cmd','sintatico.py',105),
  ('CMD -> ID RESTO_IDENT','CMD',2,'p_cmd','sintatico.py',106),
  ('PFALSA -> ELSE LCBRA CMDS RCBRA','PFALSA',4,'p_pfalsa','sintatico.py',113),
  ('PFALSA -> empty','PFALSA',1,'p_pfalsa','sintatico.py',114),
  ('RESTO_IDENT -> ASSIGMENT EXP_IDENT','RESTO_IDENT',2,'p_resto_ident','sintatico.py',121),
  ('RESTO_IDENT -> LPAR LISTA_ARG RPAR','RESTO_IDENT',3,'p_resto_ident','sintatico.py',122),
  ('CONDICAO -> EXPRESSAO IGUAL EXPRESSAO','CONDICAO',3,'p_condicao','sintatico.py',129),
  ('CONDICAO -> EXPRESSAO MEN EXPRESSAO','CONDICAO',3,'p_condicao','sintatico.py',130),
  ('CONDICAO -> EXPRESSAO MEN_IGUAL EXPRESSAO','CONDICAO',3,'p_condicao','sintatico.py',131),
  ('CONDICAO -> EXPRESSAO MAI EXPRESSAO','CONDICAO',3,'p_condicao','sintatico.py',132),
  ('CONDICAO -> EXPRESSAO MAI_IGUAL EXPRESSAO','CONDICAO',3,'p_condicao','sintatico.py',133),
  ('CONDICAO -> EXPRESSAO DIF EXPRESSAO','CONDICAO',3,'p_condicao','sintatico.py',134),
  ('CONDICAO -> NEG EXPRESSAO','CONDICAO',2,'p_condicao','sintatico.py',135),
  ('LISTA_ARG -> ARGUMENTOS','LISTA_ARG',1,'p_lista_arg','sintatico.py',154),
  ('LISTA_ARG -> empty','LISTA_ARG',1,'p_lista_arg','sintatico.py',155),
  ('ARGUMENTOS -> ID MAIS_IDENT','ARGUMENTOS',2,'p_argumentos','sintatico.py',162),
  ('MAIS_IDENT -> VIRGU ARGUMENTOS','MAIS_IDENT',2,'p_mais_ident','sintatico.py',166),
  ('MAIS_IDENT -> empty','MAIS_IDENT',1,'p_mais_ident','sintatico.py',167),
  ('EXP_IDENT -> EXPRESSAO','EXP_IDENT',1,'p_exp_ident','sintatico.py',171),
  ('EXP_IDENT -> LERDOUBLE LPAR RPAR','EXP_IDENT',3,'p_exp_ident','sintatico.py',172),
  ('EXPRESSAO -> TERMO OUTROS_TERMOS','EXPRESSAO',2,'p_expressao','sintatico.py',179),
  ('TERMO -> OP_UN FATOR MAIS_FATORES','TERMO',3,'p_termo','sintatico.py',183),
  ('OP_UN -> MENOS','OP_UN',1,'p_op_un','sintatico.py',187),
  ('OP_UN -> empty','OP_UN',1,'p_op_un','sintatico.py',188),
  ('FATOR -> ID','FATOR',1,'p_fator','sintatico.py',192),
  ('FATOR -> NUMBER','FATOR',1,'p_fator','sintatico.py',193),
  ('FATOR -> LPAR EXPRESSAO RPAR','FATOR',3,'p_fator','sintatico.py',194),
  ('OUTROS_TERMOS -> OP_AD TERMO OUTROS_TERMOS','OUTROS_TERMOS',3,'p_outros_termos','sintatico.py',201),
  ('OUTROS_TERMOS -> empty','OUTROS_TERMOS',1,'p_outros_termos','sintatico.py',202),
  ('OP_AD -> SUM','OP_AD',1,'p_op_ad','sintatico.py',210),
  ('OP_AD -> MENOS','OP_AD',1,'p_op_ad','sintatico.py',211),
  ('MAIS_FATORES -> OP_MUL FATOR MAIS_FATORES','MAIS_FATORES',3,'p_mais_fatores','sintatico.py',220),
  ('MAIS_FATORES -> empty','MAIS_FATORES',1,'p_mais_fatores','sintatico.py',221),
  ('OP_MUL -> MUL','OP_MUL',1,'p_op_mul','sintatico.py',228),
  ('OP_MUL -> DIVI','OP_MUL',1,'p_op_mul','sintatico.py',229),
  ('empty -> <empty>','empty',0,'p_empty','sintatico.py',236),
]
