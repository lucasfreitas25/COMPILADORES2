
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGMENT BOOLEAN CLASS COLON DEF DIF DIVI DOUBLE ELSE EXTENDS FALSE ID IF IGUAL INT LCBRA LENGTH LPAR LSBRA MAI MAIN MAI_IGUAL MEN MENOS MEN_IGUAL MUL NEG NEW NULL NUMBER POINT PRINT PUBLIC RCBRA RETURN RPAR RSBRA SEMICOLON STATIC STRING SUM THIS TRUE VIRGU VOID WHILEPROG : PUBLIC CLASS ID LCBRA PUBLIC STATIC VOID MAIN LPAR STRING LSBRA RSBRA ID RPAR LCBRA CMDS RCBRA METODO RCBRAMETODO : PUBLIC STATIC TIPO ID LPAR PARAMS RPAR LCBRA CMDS RETURN EXPRESSAO SEMICOLON RCBRA\n              | emptyPARAMS : TIPO ID MAIS_PARAMS\n              | emptyMAIS_PARAMS : VIRGU PARAMS\n                   | emptyDC : VAR MAIS_DC\n          MAIS_DC : SEMICOLON DC\n               | emptyVAR : TIPO VARS SEMICOLONVARS : ID MAIS_VARMAIS_VAR : VIRGU VARS\n                | emptyTIPO : DOUBLECMDS : CMD MAIS_CMDS\n            | CMD_COND CMDS\n            | DC\n            | emptyMAIS_CMDS : SEMICOLON CMDS\n                 CMD_COND : IF LPAR CONDICAO RPAR LCBRA CMDS RCBRA PFALSA\n           | WHILE LPAR CONDICAO RPAR LCBRA CMDS RCBRA\n           CMD : PRINT LPAR EXPRESSAO RPAR\n           | ID RESTO_IDENTPFALSA : ELSE LCBRA CMDS RCBRA \n              | emptyRESTO_IDENT : IGUAL EXP_IDENT\n                   | LPAR LISTA_ARG RPARCONDICAO : EXPRESSAO IGUAL EXPRESSAO\n                | EXPRESSAO MEN EXPRESSAO\n                | EXPRESSAO MEN_IGUAL EXPRESSAO\n                | EXPRESSAO MAI EXPRESSAO\n                | EXPRESSAO MAI_IGUAL EXPRESSAO\n                | EXPRESSAO DIF EXPRESSAO\n                | NEG EXPRESSAOLISTA_ARG : ARGUMENTOS\n                 | emptyARGUMENTOS : ID MAIS_IDENTMAIS_IDENT : VIRGU ARGUMENTOS \n                  | emptyEXP_IDENT : EXPRESSAO\n                 | TERMOEXPRESSAO : TERMO OUTROS_TERMOSTERMO : OP_UN FATOR MAIS_FATORESOP_UN : MENOS\n             | emptyFATOR : ID\n             | DOUBLE\n             | LPAR EXPRESSAO RPAROUTROS_TERMOS : OP_AD TERMO OUTROS_TERMOS\n                     | emptyOP_AD : SUM\n             | MENOSMAIS_FATORES : OP_MUL FATOR MAIS_FATORES\n                    | emptyOP_MUL : MUL\n              | DIVIempty :\n            '
    
_lr_action_items = {'PUBLIC':([0,5,32,],[2,6,54,]),'$end':([1,83,],[0,-1,]),'CLASS':([2,],[3,]),'ID':([3,13,16,20,27,28,30,31,34,36,37,38,47,48,49,62,67,70,72,73,77,80,86,87,88,89,90,91,97,99,100,103,104,111,120,121,122,125,127,130,134,138,139,],[4,14,17,17,43,-15,-58,53,17,-58,-58,-58,75,-45,-46,-58,43,-58,-52,-53,-58,53,-58,-58,-58,-58,-58,-58,75,-56,-57,115,17,17,-58,-22,128,-21,-26,17,17,-25,-58,]),'LCBRA':([4,15,85,93,126,129,],[5,16,104,111,130,134,]),'STATIC':([6,54,],[7,82,]),'VOID':([7,],[8,]),'MAIN':([8,],[9,]),'LPAR':([9,17,23,24,25,30,36,37,38,47,48,49,62,70,72,73,77,86,87,88,89,90,91,97,99,100,115,139,],[10,31,36,37,38,-58,-58,-58,-58,77,-45,-46,-58,-58,-52,-53,-58,-58,-58,-58,-58,-58,-58,77,-56,-57,119,-58,]),'STRING':([10,],[11,]),'LSBRA':([11,],[12,]),'RSBRA':([12,],[13,]),'RPAR':([14,31,50,51,52,53,58,59,60,63,69,71,74,75,76,79,81,92,95,96,98,101,102,105,106,107,108,109,110,112,113,114,118,119,123,124,128,131,132,133,136,],[15,-58,78,-36,-37,-58,84,-58,85,93,-43,-51,-58,-47,-48,-38,-40,-35,-58,-44,-55,114,-39,-29,-30,-31,-32,-33,-34,-50,-58,-49,-54,-58,129,-5,-58,-4,-58,-7,-6,]),'PRINT':([16,20,34,104,111,120,121,125,127,130,134,138,],[23,23,23,23,23,-58,-22,-21,-26,23,23,-25,]),'IF':([16,20,34,104,111,120,121,125,127,130,134,138,],[24,24,24,24,24,-58,-22,-21,-26,24,24,-25,]),'WHILE':([16,20,34,104,111,120,121,125,127,130,134,138,],[25,25,25,25,25,-58,-22,-21,-26,25,25,-25,]),'RCBRA':([16,18,20,21,22,26,32,33,34,35,39,41,55,56,57,64,65,104,111,116,117,120,121,125,127,130,135,138,141,142,],[-58,32,-58,-18,-19,-58,-58,-16,-58,-17,-8,-10,83,-3,-20,-9,-11,-58,-58,120,121,-58,-22,-21,-26,-58,138,-25,142,-2,]),'DOUBLE':([16,20,30,34,36,37,38,40,47,48,49,62,70,72,73,77,82,86,87,88,89,90,91,97,99,100,104,111,119,120,121,125,127,130,132,134,138,139,],[28,28,-58,28,-58,-58,-58,28,76,-45,-46,-58,-58,-52,-53,-58,28,-58,-58,-58,-58,-58,-58,76,-56,-57,28,28,28,-58,-22,-21,-26,28,28,28,-25,-58,]),'IGUAL':([17,59,61,69,71,74,75,76,95,96,98,112,113,114,118,],[30,-58,86,-43,-51,-58,-47,-48,-58,-44,-55,-50,-58,-49,-54,]),'SEMICOLON':([19,26,29,42,43,44,45,46,59,65,66,68,69,71,74,75,76,78,84,94,95,96,98,112,113,114,118,140,],[34,40,-24,65,-58,-27,-41,-42,-58,-11,-12,-14,-43,-51,-58,-47,-48,-28,-23,-13,-58,-44,-55,-50,-58,-49,-54,141,]),'RETURN':([20,21,22,26,33,34,35,39,41,57,64,65,120,121,125,127,134,137,138,],[-58,-18,-19,-58,-16,-58,-17,-8,-10,-20,-9,-11,-58,-22,-21,-26,-58,139,-25,]),'MENOS':([30,36,37,38,46,59,62,70,72,73,74,75,76,77,86,87,88,89,90,91,95,96,98,113,114,118,139,],[48,48,48,48,73,73,48,48,-52,-53,-58,-47,-48,48,48,48,48,48,48,48,73,-44,-55,-58,-49,-54,48,]),'NEG':([37,38,],[62,62,]),'VIRGU':([43,53,128,],[67,80,132,]),'SUM':([46,59,74,75,76,95,96,98,113,114,118,],[72,72,-58,-47,-48,72,-44,-55,-58,-49,-54,]),'MEN':([59,61,69,71,74,75,76,95,96,98,112,113,114,118,],[-58,87,-43,-51,-58,-47,-48,-58,-44,-55,-50,-58,-49,-54,]),'MEN_IGUAL':([59,61,69,71,74,75,76,95,96,98,112,113,114,118,],[-58,88,-43,-51,-58,-47,-48,-58,-44,-55,-50,-58,-49,-54,]),'MAI':([59,61,69,71,74,75,76,95,96,98,112,113,114,118,],[-58,89,-43,-51,-58,-47,-48,-58,-44,-55,-50,-58,-49,-54,]),'MAI_IGUAL':([59,61,69,71,74,75,76,95,96,98,112,113,114,118,],[-58,90,-43,-51,-58,-47,-48,-58,-44,-55,-50,-58,-49,-54,]),'DIF':([59,61,69,71,74,75,76,95,96,98,112,113,114,118,],[-58,91,-43,-51,-58,-47,-48,-58,-44,-55,-50,-58,-49,-54,]),'MUL':([74,75,76,113,114,],[99,-47,-48,99,-49,]),'DIVI':([74,75,76,113,114,],[100,-47,-48,100,-49,]),'ELSE':([120,],[126,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROG':([0,],[1,]),'CMDS':([16,20,34,104,111,130,134,],[18,35,57,116,117,135,137,]),'CMD':([16,20,34,104,111,130,134,],[19,19,19,19,19,19,19,]),'CMD_COND':([16,20,34,104,111,130,134,],[20,20,20,20,20,20,20,]),'DC':([16,20,34,40,104,111,130,134,],[21,21,21,64,21,21,21,21,]),'empty':([16,20,26,30,31,32,34,36,37,38,43,46,53,59,62,70,74,77,86,87,88,89,90,91,95,104,111,113,119,120,128,130,132,134,139,],[22,22,41,49,52,56,22,49,49,49,68,71,81,71,49,49,98,49,49,49,49,49,49,49,71,22,22,98,124,127,133,22,124,22,49,]),'VAR':([16,20,34,40,104,111,130,134,],[26,26,26,26,26,26,26,26,]),'TIPO':([16,20,34,40,82,104,111,119,130,132,134,],[27,27,27,27,103,27,27,122,27,122,27,]),'RESTO_IDENT':([17,],[29,]),'MAIS_CMDS':([19,],[33,]),'MAIS_DC':([26,],[39,]),'VARS':([27,67,],[42,94,]),'EXP_IDENT':([30,],[44,]),'EXPRESSAO':([30,36,37,38,62,77,86,87,88,89,90,91,139,],[45,58,61,61,92,101,105,106,107,108,109,110,140,]),'TERMO':([30,36,37,38,62,70,77,86,87,88,89,90,91,139,],[46,59,59,59,59,95,59,59,59,59,59,59,59,59,]),'OP_UN':([30,36,37,38,62,70,77,86,87,88,89,90,91,139,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'LISTA_ARG':([31,],[50,]),'ARGUMENTOS':([31,80,],[51,102,]),'METODO':([32,],[55,]),'CONDICAO':([37,38,],[60,63,]),'MAIS_VAR':([43,],[66,]),'OUTROS_TERMOS':([46,59,95,],[69,69,112,]),'OP_AD':([46,59,95,],[70,70,70,]),'FATOR':([47,97,],[74,113,]),'MAIS_IDENT':([53,],[79,]),'MAIS_FATORES':([74,113,],[96,118,]),'OP_MUL':([74,113,],[97,97,]),'PARAMS':([119,132,],[123,136,]),'PFALSA':([120,],[125,]),'MAIS_PARAMS':([128,],[131,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROG","S'",1,None,None,None),
  ('PROG -> PUBLIC CLASS ID LCBRA PUBLIC STATIC VOID MAIN LPAR STRING LSBRA RSBRA ID RPAR LCBRA CMDS RCBRA METODO RCBRA','PROG',19,'p_prog','sintatico.py',45),
  ('METODO -> PUBLIC STATIC TIPO ID LPAR PARAMS RPAR LCBRA CMDS RETURN EXPRESSAO SEMICOLON RCBRA','METODO',13,'p_metodo','sintatico.py',49),
  ('METODO -> empty','METODO',1,'p_metodo','sintatico.py',50),
  ('PARAMS -> TIPO ID MAIS_PARAMS','PARAMS',3,'p_params','sintatico.py',58),
  ('PARAMS -> empty','PARAMS',1,'p_params','sintatico.py',59),
  ('MAIS_PARAMS -> VIRGU PARAMS','MAIS_PARAMS',2,'p_mais_params','sintatico.py',66),
  ('MAIS_PARAMS -> empty','MAIS_PARAMS',1,'p_mais_params','sintatico.py',67),
  ('DC -> VAR MAIS_DC','DC',2,'p_dc','sintatico.py',74),
  ('MAIS_DC -> SEMICOLON DC','MAIS_DC',2,'p_mais_dc','sintatico.py',83),
  ('MAIS_DC -> empty','MAIS_DC',1,'p_mais_dc','sintatico.py',84),
  ('VAR -> TIPO VARS SEMICOLON','VAR',3,'p_var','sintatico.py',92),
  ('VARS -> ID MAIS_VAR','VARS',2,'p_vars','sintatico.py',96),
  ('MAIS_VAR -> VIRGU VARS','MAIS_VAR',2,'p_mais_var','sintatico.py',100),
  ('MAIS_VAR -> empty','MAIS_VAR',1,'p_mais_var','sintatico.py',101),
  ('TIPO -> DOUBLE','TIPO',1,'p_tipo','sintatico.py',108),
  ('CMDS -> CMD MAIS_CMDS','CMDS',2,'p_cmds','sintatico.py',113),
  ('CMDS -> CMD_COND CMDS','CMDS',2,'p_cmds','sintatico.py',114),
  ('CMDS -> DC','CMDS',1,'p_cmds','sintatico.py',115),
  ('CMDS -> empty','CMDS',1,'p_cmds','sintatico.py',116),
  ('MAIS_CMDS -> SEMICOLON CMDS','MAIS_CMDS',2,'p_mais_cmds','sintatico.py',123),
  ('CMD_COND -> IF LPAR CONDICAO RPAR LCBRA CMDS RCBRA PFALSA','CMD_COND',8,'p_cmd_cond','sintatico.py',131),
  ('CMD_COND -> WHILE LPAR CONDICAO RPAR LCBRA CMDS RCBRA','CMD_COND',7,'p_cmd_cond','sintatico.py',132),
  ('CMD -> PRINT LPAR EXPRESSAO RPAR','CMD',4,'p_cmd','sintatico.py',142),
  ('CMD -> ID RESTO_IDENT','CMD',2,'p_cmd','sintatico.py',143),
  ('PFALSA -> ELSE LCBRA CMDS RCBRA','PFALSA',4,'p_pfalsa','sintatico.py',150),
  ('PFALSA -> empty','PFALSA',1,'p_pfalsa','sintatico.py',151),
  ('RESTO_IDENT -> IGUAL EXP_IDENT','RESTO_IDENT',2,'p_resto_ident','sintatico.py',158),
  ('RESTO_IDENT -> LPAR LISTA_ARG RPAR','RESTO_IDENT',3,'p_resto_ident','sintatico.py',159),
  ('CONDICAO -> EXPRESSAO IGUAL EXPRESSAO','CONDICAO',3,'p_condicao','sintatico.py',166),
  ('CONDICAO -> EXPRESSAO MEN EXPRESSAO','CONDICAO',3,'p_condicao','sintatico.py',167),
  ('CONDICAO -> EXPRESSAO MEN_IGUAL EXPRESSAO','CONDICAO',3,'p_condicao','sintatico.py',168),
  ('CONDICAO -> EXPRESSAO MAI EXPRESSAO','CONDICAO',3,'p_condicao','sintatico.py',169),
  ('CONDICAO -> EXPRESSAO MAI_IGUAL EXPRESSAO','CONDICAO',3,'p_condicao','sintatico.py',170),
  ('CONDICAO -> EXPRESSAO DIF EXPRESSAO','CONDICAO',3,'p_condicao','sintatico.py',171),
  ('CONDICAO -> NEG EXPRESSAO','CONDICAO',2,'p_condicao','sintatico.py',172),
  ('LISTA_ARG -> ARGUMENTOS','LISTA_ARG',1,'p_lista_arg','sintatico.py',191),
  ('LISTA_ARG -> empty','LISTA_ARG',1,'p_lista_arg','sintatico.py',192),
  ('ARGUMENTOS -> ID MAIS_IDENT','ARGUMENTOS',2,'p_argumentos','sintatico.py',198),
  ('MAIS_IDENT -> VIRGU ARGUMENTOS','MAIS_IDENT',2,'p_mais_ident','sintatico.py',202),
  ('MAIS_IDENT -> empty','MAIS_IDENT',1,'p_mais_ident','sintatico.py',203),
  ('EXP_IDENT -> EXPRESSAO','EXP_IDENT',1,'p_exp_ident','sintatico.py',207),
  ('EXP_IDENT -> TERMO','EXP_IDENT',1,'p_exp_ident','sintatico.py',208),
  ('EXPRESSAO -> TERMO OUTROS_TERMOS','EXPRESSAO',2,'p_expressao','sintatico.py',212),
  ('TERMO -> OP_UN FATOR MAIS_FATORES','TERMO',3,'p_termo','sintatico.py',216),
  ('OP_UN -> MENOS','OP_UN',1,'p_op_un','sintatico.py',220),
  ('OP_UN -> empty','OP_UN',1,'p_op_un','sintatico.py',221),
  ('FATOR -> ID','FATOR',1,'p_fator','sintatico.py',225),
  ('FATOR -> DOUBLE','FATOR',1,'p_fator','sintatico.py',226),
  ('FATOR -> LPAR EXPRESSAO RPAR','FATOR',3,'p_fator','sintatico.py',227),
  ('OUTROS_TERMOS -> OP_AD TERMO OUTROS_TERMOS','OUTROS_TERMOS',3,'p_outros_termos','sintatico.py',234),
  ('OUTROS_TERMOS -> empty','OUTROS_TERMOS',1,'p_outros_termos','sintatico.py',235),
  ('OP_AD -> SUM','OP_AD',1,'p_op_ad','sintatico.py',243),
  ('OP_AD -> MENOS','OP_AD',1,'p_op_ad','sintatico.py',244),
  ('MAIS_FATORES -> OP_MUL FATOR MAIS_FATORES','MAIS_FATORES',3,'p_mais_fatores','sintatico.py',252),
  ('MAIS_FATORES -> empty','MAIS_FATORES',1,'p_mais_fatores','sintatico.py',253),
  ('OP_MUL -> MUL','OP_MUL',1,'p_op_mul','sintatico.py',260),
  ('OP_MUL -> DIVI','OP_MUL',1,'p_op_mul','sintatico.py',261),
  ('empty -> <empty>','empty',0,'p_empty','sintatico.py',268),
]
