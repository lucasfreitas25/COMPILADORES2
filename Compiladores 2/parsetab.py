
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGMENT CLASS DIF DIVI DOUBLE ELSE ID IF IGUAL LCBRA LERDOUBLE LPAR LSBRA MAI MAIN MAI_IGUAL MEN MENOS MEN_IGUAL MUL NEG NUMBER PRINT PUBLIC RCBRA RETURN RPAR RSBRA SEMICOLON STATIC STRING SUM VIRGU VOID WHILEPROG : PUBLIC CLASS ID LCBRA PUBLIC STATIC VOID MAIN LPAR STRING LSBRA RSBRA ID RPAR LCBRA CMDS RCBRA METODO RCBRAMETODO : PUBLIC STATIC TIPO ID LPAR PARAMS RPAR LCBRA CMDS RETURN EXPRESSAO SEMICOLON RCBRA\n              | emptyPARAMS : TIPO ID MAIS_PARAMS\n              | emptyMAIS_PARAMS : VIRGU PARAMS\n                   | emptyDC : VAR MAIS_CMDS\n          VAR : TIPO VARSVARS : ID MAIS_VARMAIS_VAR : VIRGU VARS\n                | emptyTIPO : DOUBLECMDS : CMD MAIS_CMDS\n            | CMD_COND CMDS\n            | DC\n            | emptyMAIS_CMDS : SEMICOLON CMDS\n                 CMD_COND : IF LPAR CONDICAO RPAR LCBRA CMDS RCBRA PFALSA\n           | WHILE LPAR CONDICAO RPAR LCBRA CMDS RCBRA\n           CMD : PRINT LPAR EXPRESSAO RPAR\n           | ID RESTO_IDENTPFALSA : ELSE LCBRA CMDS RCBRA \n              | emptyRESTO_IDENT : ASSIGMENT EXP_IDENT\n                   | LPAR LISTA_ARG RPARCONDICAO : EXPRESSAO RELACAO EXPRESSAORELACAO : IGUAL\n               | DIF\n               | MAI\n               | MEN\n               | MAI_IGUAL\n               | MEN_IGUALLISTA_ARG : ARGUMENTOS\n                 | emptyARGUMENTOS : ID MAIS_IDENTMAIS_IDENT : VIRGU ARGUMENTOS \n                  | emptyEXP_IDENT : EXPRESSAO\n                 | LERDOUBLE LPAR RPAREXPRESSAO : TERMO OUTROS_TERMOSTERMO : OP_UN FATOR MAIS_FATORESOP_UN : MENOS\n             | emptyFATOR : ID\n             | NUMBER\n             | LPAR EXPRESSAO RPAROUTROS_TERMOS : OP_AD TERMO OUTROS_TERMOS\n                     | emptyOP_AD : SUM\n             | MENOSMAIS_FATORES : OP_MUL FATOR MAIS_FATORES\n                    | emptyOP_MUL : MUL\n              | DIVIempty :'
    
_lr_action_items = {'PUBLIC':([0,5,32,],[2,6,53,]),'$end':([1,79,],[0,-1,]),'CLASS':([2,],[3,]),'ID':([3,13,16,20,27,28,30,31,34,36,37,38,46,47,48,62,66,68,69,73,76,82,83,84,85,86,87,88,94,96,97,100,101,103,112,113,114,117,119,122,126,130,131,],[4,14,17,17,41,-13,-56,52,17,-56,-56,-56,71,-43,-44,41,-56,-50,-51,-56,52,-56,-28,-29,-30,-31,-32,-33,71,-54,-55,107,17,17,-56,-20,120,-19,-24,17,17,-23,-56,]),'LCBRA':([4,15,81,89,118,121,],[5,16,101,103,122,126,]),'STATIC':([6,53,],[7,78,]),'VOID':([7,],[8,]),'MAIN':([8,],[9,]),'LPAR':([9,17,23,24,25,30,36,37,38,44,46,47,48,66,68,69,73,82,83,84,85,86,87,88,94,96,97,107,131,],[10,31,36,37,38,-56,-56,-56,-56,64,73,-43,-44,-56,-50,-51,-56,-56,-28,-29,-30,-31,-32,-33,73,-54,-55,111,-56,]),'STRING':([10,],[11,]),'LSBRA':([11,],[12,]),'RSBRA':([12,],[13,]),'RPAR':([14,31,45,49,50,51,52,57,58,60,64,65,67,70,71,72,75,77,92,93,95,98,99,102,104,105,106,110,111,115,116,120,123,124,125,128,],[15,-56,-56,74,-34,-35,-56,80,81,89,91,-41,-49,-56,-45,-46,-36,-38,-56,-42,-53,106,-37,-27,-48,-56,-47,-52,-56,121,-5,-56,-4,-56,-7,-6,]),'PRINT':([16,20,34,101,103,112,113,117,119,122,126,130,],[23,23,23,23,23,-56,-20,-19,-24,23,23,-23,]),'IF':([16,20,34,101,103,112,113,117,119,122,126,130,],[24,24,24,24,24,-56,-20,-19,-24,24,24,-23,]),'WHILE':([16,20,34,101,103,112,113,117,119,122,126,130,],[25,25,25,25,25,-56,-20,-19,-24,25,25,-23,]),'RCBRA':([16,18,20,21,22,32,33,34,35,39,54,55,56,101,103,108,109,112,113,117,119,122,127,130,133,134,],[-56,32,-56,-16,-17,-56,-14,-56,-15,-8,79,-3,-18,-56,-56,112,113,-56,-20,-19,-24,-56,130,-23,134,-2,]),'DOUBLE':([16,20,34,78,101,103,111,112,113,117,119,122,124,126,130,],[28,28,28,28,28,28,28,-56,-20,-19,-24,28,28,28,-23,]),'ASSIGMENT':([17,],[30,]),'SEMICOLON':([19,26,29,40,41,42,43,45,61,63,65,67,70,71,72,74,80,90,91,92,93,95,104,105,106,110,132,],[34,34,-22,-9,-56,-25,-39,-56,-10,-12,-41,-49,-56,-45,-46,-26,-21,-11,-40,-56,-42,-53,-48,-56,-47,-52,133,]),'RETURN':([20,21,22,33,34,35,39,56,112,113,117,119,126,129,130,],[-56,-16,-17,-14,-56,-15,-8,-18,-56,-20,-19,-24,-56,131,-23,]),'LERDOUBLE':([30,],[44,]),'MENOS':([30,36,37,38,45,66,68,69,70,71,72,73,82,83,84,85,86,87,88,92,93,95,105,106,110,131,],[47,47,47,47,69,47,-50,-51,-56,-45,-46,47,47,-28,-29,-30,-31,-32,-33,69,-42,-53,-56,-47,-52,47,]),'NUMBER':([30,36,37,38,46,47,48,66,68,69,73,82,83,84,85,86,87,88,94,96,97,131,],[-56,-56,-56,-56,72,-43,-44,-56,-50,-51,-56,-56,-28,-29,-30,-31,-32,-33,72,-54,-55,-56,]),'VIRGU':([41,52,120,],[62,76,124,]),'SUM':([45,70,71,72,92,93,95,105,106,110,],[68,-56,-45,-46,68,-42,-53,-56,-47,-52,]),'IGUAL':([45,59,65,67,70,71,72,92,93,95,104,105,106,110,],[-56,83,-41,-49,-56,-45,-46,-56,-42,-53,-48,-56,-47,-52,]),'DIF':([45,59,65,67,70,71,72,92,93,95,104,105,106,110,],[-56,84,-41,-49,-56,-45,-46,-56,-42,-53,-48,-56,-47,-52,]),'MAI':([45,59,65,67,70,71,72,92,93,95,104,105,106,110,],[-56,85,-41,-49,-56,-45,-46,-56,-42,-53,-48,-56,-47,-52,]),'MEN':([45,59,65,67,70,71,72,92,93,95,104,105,106,110,],[-56,86,-41,-49,-56,-45,-46,-56,-42,-53,-48,-56,-47,-52,]),'MAI_IGUAL':([45,59,65,67,70,71,72,92,93,95,104,105,106,110,],[-56,87,-41,-49,-56,-45,-46,-56,-42,-53,-48,-56,-47,-52,]),'MEN_IGUAL':([45,59,65,67,70,71,72,92,93,95,104,105,106,110,],[-56,88,-41,-49,-56,-45,-46,-56,-42,-53,-48,-56,-47,-52,]),'MUL':([70,71,72,105,106,],[96,-45,-46,96,-47,]),'DIVI':([70,71,72,105,106,],[97,-45,-46,97,-47,]),'ELSE':([112,],[118,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROG':([0,],[1,]),'CMDS':([16,20,34,101,103,122,126,],[18,35,56,108,109,127,129,]),'CMD':([16,20,34,101,103,122,126,],[19,19,19,19,19,19,19,]),'CMD_COND':([16,20,34,101,103,122,126,],[20,20,20,20,20,20,20,]),'DC':([16,20,34,101,103,122,126,],[21,21,21,21,21,21,21,]),'empty':([16,20,30,31,32,34,36,37,38,41,45,52,66,70,73,82,92,101,103,105,111,112,120,122,124,126,131,],[22,22,48,51,55,22,48,48,48,63,67,77,48,95,48,48,67,22,22,95,116,119,125,22,116,22,48,]),'VAR':([16,20,34,101,103,122,126,],[26,26,26,26,26,26,26,]),'TIPO':([16,20,34,78,101,103,111,122,124,126,],[27,27,27,100,27,27,114,27,114,27,]),'RESTO_IDENT':([17,],[29,]),'MAIS_CMDS':([19,26,],[33,39,]),'VARS':([27,62,],[40,90,]),'EXP_IDENT':([30,],[42,]),'EXPRESSAO':([30,36,37,38,73,82,131,],[43,57,59,59,98,102,132,]),'TERMO':([30,36,37,38,66,73,82,131,],[45,45,45,45,92,45,45,45,]),'OP_UN':([30,36,37,38,66,73,82,131,],[46,46,46,46,46,46,46,46,]),'LISTA_ARG':([31,],[49,]),'ARGUMENTOS':([31,76,],[50,99,]),'METODO':([32,],[54,]),'CONDICAO':([37,38,],[58,60,]),'MAIS_VAR':([41,],[61,]),'OUTROS_TERMOS':([45,92,],[65,104,]),'OP_AD':([45,92,],[66,66,]),'FATOR':([46,94,],[70,105,]),'MAIS_IDENT':([52,],[75,]),'RELACAO':([59,],[82,]),'MAIS_FATORES':([70,105,],[93,110,]),'OP_MUL':([70,105,],[94,94,]),'PARAMS':([111,124,],[115,128,]),'PFALSA':([112,],[117,]),'MAIS_PARAMS':([120,],[123,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROG","S'",1,None,None,None),
  ('PROG -> PUBLIC CLASS ID LCBRA PUBLIC STATIC VOID MAIN LPAR STRING LSBRA RSBRA ID RPAR LCBRA CMDS RCBRA METODO RCBRA','PROG',19,'p_prog','teste.py',63),
  ('METODO -> PUBLIC STATIC TIPO ID LPAR PARAMS RPAR LCBRA CMDS RETURN EXPRESSAO SEMICOLON RCBRA','METODO',13,'p_metodo','teste.py',69),
  ('METODO -> empty','METODO',1,'p_metodo','teste.py',70),
  ('PARAMS -> TIPO ID MAIS_PARAMS','PARAMS',3,'p_params','teste.py',90),
  ('PARAMS -> empty','PARAMS',1,'p_params','teste.py',91),
  ('MAIS_PARAMS -> VIRGU PARAMS','MAIS_PARAMS',2,'p_mais_params','teste.py',99),
  ('MAIS_PARAMS -> empty','MAIS_PARAMS',1,'p_mais_params','teste.py',100),
  ('DC -> VAR MAIS_CMDS','DC',2,'p_dc','teste.py',108),
  ('VAR -> TIPO VARS','VAR',2,'p_var','teste.py',117),
  ('VARS -> ID MAIS_VAR','VARS',2,'p_vars','teste.py',126),
  ('MAIS_VAR -> VIRGU VARS','MAIS_VAR',2,'p_mais_var','teste.py',132),
  ('MAIS_VAR -> empty','MAIS_VAR',1,'p_mais_var','teste.py',133),
  ('TIPO -> DOUBLE','TIPO',1,'p_tipo','teste.py',141),
  ('CMDS -> CMD MAIS_CMDS','CMDS',2,'p_cmds','teste.py',147),
  ('CMDS -> CMD_COND CMDS','CMDS',2,'p_cmds','teste.py',148),
  ('CMDS -> DC','CMDS',1,'p_cmds','teste.py',149),
  ('CMDS -> empty','CMDS',1,'p_cmds','teste.py',150),
  ('MAIS_CMDS -> SEMICOLON CMDS','MAIS_CMDS',2,'p_mais_cmds','teste.py',161),
  ('CMD_COND -> IF LPAR CONDICAO RPAR LCBRA CMDS RCBRA PFALSA','CMD_COND',8,'p_cmd_cond','teste.py',170),
  ('CMD_COND -> WHILE LPAR CONDICAO RPAR LCBRA CMDS RCBRA','CMD_COND',7,'p_cmd_cond','teste.py',171),
  ('CMD -> PRINT LPAR EXPRESSAO RPAR','CMD',4,'p_cmd','teste.py',184),
  ('CMD -> ID RESTO_IDENT','CMD',2,'p_cmd','teste.py',185),
  ('PFALSA -> ELSE LCBRA CMDS RCBRA','PFALSA',4,'p_pfalsa','teste.py',199),
  ('PFALSA -> empty','PFALSA',1,'p_pfalsa','teste.py',200),
  ('RESTO_IDENT -> ASSIGMENT EXP_IDENT','RESTO_IDENT',2,'p_resto_ident','teste.py',211),
  ('RESTO_IDENT -> LPAR LISTA_ARG RPAR','RESTO_IDENT',3,'p_resto_ident','teste.py',212),
  ('CONDICAO -> EXPRESSAO RELACAO EXPRESSAO','CONDICAO',3,'p_condicao','teste.py',226),
  ('RELACAO -> IGUAL','RELACAO',1,'p_relacao','teste.py',248),
  ('RELACAO -> DIF','RELACAO',1,'p_relacao','teste.py',249),
  ('RELACAO -> MAI','RELACAO',1,'p_relacao','teste.py',250),
  ('RELACAO -> MEN','RELACAO',1,'p_relacao','teste.py',251),
  ('RELACAO -> MAI_IGUAL','RELACAO',1,'p_relacao','teste.py',252),
  ('RELACAO -> MEN_IGUAL','RELACAO',1,'p_relacao','teste.py',253),
  ('LISTA_ARG -> ARGUMENTOS','LISTA_ARG',1,'p_lista_arg','teste.py',259),
  ('LISTA_ARG -> empty','LISTA_ARG',1,'p_lista_arg','teste.py',260),
  ('ARGUMENTOS -> ID MAIS_IDENT','ARGUMENTOS',2,'p_argumentos','teste.py',267),
  ('MAIS_IDENT -> VIRGU ARGUMENTOS','MAIS_IDENT',2,'p_mais_ident','teste.py',272),
  ('MAIS_IDENT -> empty','MAIS_IDENT',1,'p_mais_ident','teste.py',273),
  ('EXP_IDENT -> EXPRESSAO','EXP_IDENT',1,'p_exp_ident','teste.py',278),
  ('EXP_IDENT -> LERDOUBLE LPAR RPAR','EXP_IDENT',3,'p_exp_ident','teste.py',279),
  ('EXPRESSAO -> TERMO OUTROS_TERMOS','EXPRESSAO',2,'p_expressao','teste.py',288),
  ('TERMO -> OP_UN FATOR MAIS_FATORES','TERMO',3,'p_termo','teste.py',298),
  ('OP_UN -> MENOS','OP_UN',1,'p_op_un','teste.py',316),
  ('OP_UN -> empty','OP_UN',1,'p_op_un','teste.py',317),
  ('FATOR -> ID','FATOR',1,'p_fator','teste.py',322),
  ('FATOR -> NUMBER','FATOR',1,'p_fator','teste.py',323),
  ('FATOR -> LPAR EXPRESSAO RPAR','FATOR',3,'p_fator','teste.py',324),
  ('OUTROS_TERMOS -> OP_AD TERMO OUTROS_TERMOS','OUTROS_TERMOS',3,'p_outros_termos','teste.py',344),
  ('OUTROS_TERMOS -> empty','OUTROS_TERMOS',1,'p_outros_termos','teste.py',345),
  ('OP_AD -> SUM','OP_AD',1,'p_op_ad','teste.py',364),
  ('OP_AD -> MENOS','OP_AD',1,'p_op_ad','teste.py',365),
  ('MAIS_FATORES -> OP_MUL FATOR MAIS_FATORES','MAIS_FATORES',3,'p_mais_fatores','teste.py',370),
  ('MAIS_FATORES -> empty','MAIS_FATORES',1,'p_mais_fatores','teste.py',371),
  ('OP_MUL -> MUL','OP_MUL',1,'p_op_mul','teste.py',393),
  ('OP_MUL -> DIVI','OP_MUL',1,'p_op_mul','teste.py',394),
  ('empty -> <empty>','empty',0,'p_empty','teste.py',399),
]
